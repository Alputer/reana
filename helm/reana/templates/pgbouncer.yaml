{{- if .Values.pgbouncer.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "reana.prefix" . }}-pgbouncer
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    app: {{ include "reana.prefix" . }}-pgbouncer
  ports:
  - port: 6432
    targetPort: 6432
    protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "reana.prefix" . }}-pgbouncer
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ if .Values.maintenance.enabled -}} 0 {{- else -}} 1 {{- end }}
  selector:
    matchLabels:
      app: {{ include "reana.prefix" . }}-pgbouncer
  template:
    metadata:
      labels:
        app: {{ include "reana.prefix" . }}-pgbouncer
      annotations:
        checksum/pgbouncer-config: {{ include (print $.Template.BasePath "/pgbouncer-config.yaml") . | sha256sum }}
        checksum/pgbouncer-secrets: {{ include (print $.Template.BasePath "/pgbouncer-secrets.yaml") . | sha256sum }}
        checksum/database-secrets: {{ include (print $.Template.BasePath "/database-secrets.yaml") . | sha256sum }}
    spec:
      containers:
      - name: pgbouncer
        image: {{ .Values.pgbouncer.image | quote }}
        ports:
        - containerPort: 6432
        envFrom:
          - configMapRef:
              name: {{ include "reana.prefix" . }}-pgbouncer-config
        env:
        - name: POSTGRESQL_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ include "reana.prefix" . }}-db-secrets
              key: user
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "reana.prefix" . }}-db-secrets
              key: password
        - name: PGBOUNCER_USERLIST
          valueFrom:
            secretKeyRef:
              name: {{ include "reana.prefix" . }}-pgbouncer-secrets
              key: userlist
        {{- range $key, $value := .Values.pgbouncer.environment }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
      {{- if .Values.node_label_infrastructuredb }}
      {{- $full_label := split "=" .Values.node_label_infrastructuredb }}
      nodeSelector:
        {{ $full_label._0 }}: {{ $full_label._1 }}
      {{- else if .Values.node_label_infrastructure }}
      {{- $full_label := split "=" .Values.node_label_infrastructure }}
      nodeSelector:
        {{ $full_label._0 }}: {{ $full_label._1 }}
      {{- end }}
{{- end }}
